{"ast":null,"code":"import { Produto } from '../produto';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ProdutoService } from '../produto.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../produto.service\";\nimport * as i3 from \"@angular/forms\";\nexport let UpdateProdutoComponent = /*#__PURE__*/(() => {\n  class UpdateProdutoComponent {\n    constructor(route, router, produtoService) {\n      this.route = route;\n      this.router = router;\n      this.produtoService = produtoService;\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.produto = new Produto();\n      this.codigo = this.route.snapshot.params['codigo'];\n      this.produtoService.getProduto(this.codigo).subscribe(data => {\n        console.log(data);\n        this.produto = data;\n      }, error => console.log(error));\n    }\n    updateProduto() {\n      this.submitted = false;\n      this.produtoService.updateProduto(this.codigo, this.produto).subscribe(data => console.log(data), error => console.log(error));\n      this.produto = new Produto();\n      this.gotoList();\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.updateProduto();\n    }\n    gotoList() {\n      this.router.navigate(['/produtos']);\n    }\n    static #_ = this.ɵfac = function UpdateProdutoComponent_Factory(t) {\n      return new (t || UpdateProdutoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ProdutoService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: UpdateProdutoComponent,\n      selectors: [[\"app-update-produto\"]],\n      decls: 14,\n      vars: 3,\n      consts: [[2, \"width\", \"400px\", 3, \"hidden\"], [3, \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"type\", \"text\", \"id\", \"nome\", \"required\", \"\", \"name\", \"nome\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"text\", \"id\", \"preco\", \"required\", \"\", \"name\", \"preco\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\"]],\n      template: function UpdateProdutoComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"h3\");\n          i0.ɵɵtext(1, \"Update Produto\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 0)(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function UpdateProdutoComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Nome\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"input\", 4);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateProdutoComponent_Template_input_ngModelChange_7_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.produto.nome, $event) || (ctx.produto.nome = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 3);\n          i0.ɵɵtext(10, \"Pre\\u00E7o\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function UpdateProdutoComponent_Template_input_ngModelChange_11_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.produto.preco, $event) || (ctx.produto.preco = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(12, \"button\", 6);\n          i0.ɵɵtext(13, \"Submit\");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"hidden\", ctx.submitted);\n          i0.ɵɵadvance(5);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.produto.nome);\n          i0.ɵɵadvance(4);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.produto.preco);\n        }\n      },\n      dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm]\n    });\n  }\n  return UpdateProdutoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}